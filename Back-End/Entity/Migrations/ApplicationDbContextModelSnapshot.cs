// <auto-generated />
using Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entity.Model.Form", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("id");

                    b.ToTable("Forms", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            description = "Formulario principal del sistema",
                            isdeleted = false,
                            name = "Formulario Principal"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            description = "Formulario secundario",
                            isdeleted = false,
                            name = "Formulario Secundario"
                        });
                });

            modelBuilder.Entity("Entity.Model.FormModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("formid")
                        .HasColumnType("integer");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("moduleid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("formid");

                    b.HasIndex("moduleid");

                    b.ToTable("FormModules", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            formid = 1,
                            isdeleted = false,
                            moduleid = 1
                        },
                        new
                        {
                            id = 2,
                            formid = 2,
                            isdeleted = false,
                            moduleid = 1
                        });
                });

            modelBuilder.Entity("Entity.Model.Permission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("id");

                    b.ToTable("Permissions", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            description = "Permiso para lectura",
                            isdeleted = false,
                            name = "Leer"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            description = "Permiso para escritura",
                            isdeleted = false,
                            name = "Escribir"
                        });
                });

            modelBuilder.Entity("Entity.Model.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("phonenumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("id");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            firstname = "Juan",
                            isdeleted = false,
                            lastname = "Pérez",
                            phonenumber = "1234567890"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            firstname = "Sara",
                            isdeleted = false,
                            lastname = "sofia",
                            phonenumber = "312312314"
                        });
                });

            modelBuilder.Entity("Entity.Model.RolFormPermission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("formid")
                        .HasColumnType("integer");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("permissionid")
                        .HasColumnType("integer");

                    b.Property<int>("rolid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("formid");

                    b.HasIndex("permissionid");

                    b.HasIndex("rolid");

                    b.ToTable("RolFormPermissions", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            formid = 1,
                            isdeleted = false,
                            permissionid = 1,
                            rolid = 1
                        },
                        new
                        {
                            id = 2,
                            formid = 1,
                            isdeleted = false,
                            permissionid = 2,
                            rolid = 2
                        });
                });

            modelBuilder.Entity("Entity.Model.RolUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("rolid")
                        .HasColumnType("integer");

                    b.Property<int>("userid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("rolid");

                    b.HasIndex("userid");

                    b.ToTable("RolUsers", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            isdeleted = false,
                            rolid = 1,
                            userid = 1
                        },
                        new
                        {
                            id = 2,
                            isdeleted = false,
                            rolid = 2,
                            userid = 2
                        });
                });

            modelBuilder.Entity("Entity.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool?>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("email")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool?>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("personid")
                        .HasColumnType("integer");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("id");

                    b.HasIndex("personid");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            email = "camilo@gmail.com",
                            isdeleted = false,
                            password = "admin123",
                            personid = 1,
                            username = "camilosada12"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            email = "sarita@gmail.com",
                            isdeleted = false,
                            password = "sara12312",
                            personid = 2,
                            username = "sara12312"
                        });
                });

            modelBuilder.Entity("Entity.Model.rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            description = "Rol con todos los permisos",
                            isdeleted = false,
                            name = "Administrador"
                        },
                        new
                        {
                            id = 2,
                            description = "Rol estándar para usuarios normales",
                            isdeleted = false,
                            name = "Usuario"
                        });
                });

            modelBuilder.Entity("Module", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("id");

                    b.ToTable("Modules", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            description = "Módulo para administración general",
                            isdeleted = false,
                            name = "Módulo Administrativo"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            description = "Módulo encargado de generar reportes",
                            isdeleted = false,
                            name = "Módulo de Reportes"
                        });
                });

            modelBuilder.Entity("Entity.Model.FormModule", b =>
                {
                    b.HasOne("Entity.Model.Form", "Form")
                        .WithMany("FormModules")
                        .HasForeignKey("formid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_FormModule_Form");

                    b.HasOne("Module", "Module")
                        .WithMany("FormModules")
                        .HasForeignKey("moduleid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Module_FormModules");

                    b.Navigation("Form");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Entity.Model.RolFormPermission", b =>
                {
                    b.HasOne("Entity.Model.Form", "Form")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("formid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolFormPermission_Form");

                    b.HasOne("Entity.Model.Permission", "Permission")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("permissionid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolFormPermission_Permission");

                    b.HasOne("Entity.Model.rol", "Rol")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("rolid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolFormPermission_Rol");

                    b.Navigation("Form");

                    b.Navigation("Permission");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entity.Model.RolUser", b =>
                {
                    b.HasOne("Entity.Model.rol", "Rol")
                        .WithMany("RolUser")
                        .HasForeignKey("rolid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolUser_Rol");

                    b.HasOne("Entity.Model.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RolUser_User");

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Model.User", b =>
                {
                    b.HasOne("Entity.Model.Person", "person")
                        .WithMany("User")
                        .HasForeignKey("personid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Person_User");

                    b.Navigation("person");
                });

            modelBuilder.Entity("Entity.Model.Form", b =>
                {
                    b.Navigation("FormModules");

                    b.Navigation("RolFormPermission");
                });

            modelBuilder.Entity("Entity.Model.Permission", b =>
                {
                    b.Navigation("RolFormPermission");
                });

            modelBuilder.Entity("Entity.Model.Person", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Model.User", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Entity.Model.rol", b =>
                {
                    b.Navigation("RolFormPermission");

                    b.Navigation("RolUser");
                });

            modelBuilder.Entity("Module", b =>
                {
                    b.Navigation("FormModules");
                });
#pragma warning restore 612, 618
        }
    }
}
